% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/apikey.R
\name{Apikey}
\alias{Apikey}
\title{An \code{Apikey} Class Representing an Apikey object}
\description{
A \code{Apikey} object has an api_key string and a key name string.
}
\details{
An \code{Apikey} object can get API data via an API URL.
}
\examples{

## ------------------------------------------------
## Method `Apikey$get_api_response`
## ------------------------------------------------

\dontrun{
myProfile <- Apikey$new("abc1234567890")
url <- "https://httpbin.org/json"
api_response <- myProfile$get_api_response(url)
}

## ------------------------------------------------
## Method `Apikey$get_api_data`
## ------------------------------------------------

\dontrun{
myProfile <- Apikey$new("abc1234567890")
json_url <- "https://httpbin.org/json"
api_data_json <- myProfile$get_api_data(json_url)

csv_url <- "https://httpbin.org/robots.txt"
api_data_csv <- myProfile$get_api_data(csv_url, fromCSV = TRUE)
}

## ------------------------------------------------
## Method `Apikey$get_api_graph`
## ------------------------------------------------

\dontrun{
myProfile <- Apikey$new("abc1234567890")
url <- "https://httpbin.org/image/png"
api_data_graph <- myProfile$get_api_graph(url)
names(api_data_graph)
img <- png::readPNG(api_data_graph$graph)
grid::grid.raster(img)
}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-NSSPApikey-new}{\code{Apikey$new()}}
\item \href{#method-NSSPApikey-get_api_response}{\code{Apikey$get_api_response()}}
\item \href{#method-NSSPApikey-get_api_data}{\code{Apikey$get_api_data()}}
\item \href{#method-NSSPApikey-get_api_graph}{\code{Apikey$get_api_graph()}}
\item \href{#method-NSSPApikey-clone}{\code{Apikey$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-NSSPApikey-new"></a>}}
\if{latex}{\out{\hypertarget{method-NSSPApikey-new}{}}}
\subsection{Method \code{new()}}{
Initializes a new Credentials object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Apikey$new(api_key, key_name = "API-KEY")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_key}}{a string for API key}

\item{\code{key_name}}{a string for an API Key name. Default is \code{API-KEY}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An object of class \code{Apikey}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-NSSPApikey-get_api_response"></a>}}
\if{latex}{\out{\hypertarget{method-NSSPApikey-get_api_response}{}}}
\subsection{Method \code{get_api_response()}}{
Get API response
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Apikey$get_api_response(url)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{url}}{a character of API URL}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An object of class \code{response}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
myProfile <- Apikey$new("abc1234567890")
url <- "https://httpbin.org/json"
api_response <- myProfile$get_api_response(url)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-NSSPApikey-get_api_data"></a>}}
\if{latex}{\out{\hypertarget{method-NSSPApikey-get_api_data}{}}}
\subsection{Method \code{get_api_data()}}{
Get API data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Apikey$get_api_data(url, fromCSV = FALSE, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{url}}{a character ofAPI URL}

\item{\code{fromCSV}}{a logical, defines whether data are returned in .csv format or .json format}

\item{\code{...}}{further arguments and CSV parsing parameters to be passed to \code{\link[readr]{read_csv}} when \code{fromCSV = TRUE}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a dataframe (\code{fromCSV = TRUE}) or a list containing a dataframe and its metadata (\code{fromCSV = TRUE})
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
myProfile <- Apikey$new("abc1234567890")
json_url <- "https://httpbin.org/json"
api_data_json <- myProfile$get_api_data(json_url)

csv_url <- "https://httpbin.org/robots.txt"
api_data_csv <- myProfile$get_api_data(csv_url, fromCSV = TRUE)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-NSSPApikey-get_api_graph"></a>}}
\if{latex}{\out{\hypertarget{method-NSSPApikey-get_api_graph}{}}}
\subsection{Method \code{get_api_graph()}}{
Get API graph
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Apikey$get_api_graph(url, file_ext = ".png")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{url}}{a character of API URL}

\item{\code{file_ext}}{a non-empty character vector giving the file extension. Default is \code{.png}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list containing an api_response object and a path to a time series graph in .png format
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
myProfile <- Apikey$new("abc1234567890")
url <- "https://httpbin.org/image/png"
api_data_graph <- myProfile$get_api_graph(url)
names(api_data_graph)
img <- png::readPNG(api_data_graph$graph)
grid::grid.raster(img)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-NSSPApikey-clone"></a>}}
\if{latex}{\out{\hypertarget{method-NSSPApikey-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Apikey$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
