% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/credentials.R
\name{Credentials}
\alias{Credentials}
\title{A `NSSPCredentials` Class Representing a Credentials object}
\description{
A `Credentials` object has a username, a password and a key.
}
\details{
A `Credentials` object can get ESSENCE API data via an API URL.
}
\examples{

## ------------------------------------------------
## Method `Credentials$get_api_response`
## ------------------------------------------------

\dontrun{
myProfile <- Credentials$new(askme("Enter my username: "), askme())
url <- "<ESSENCE_url>"
api_response <- myProfile$get_api_response(url)
}

## ------------------------------------------------
## Method `Credentials$get_api_data`
## ------------------------------------------------

\dontrun{
myProfile <- Credentials$new(askme("Enter my username: "), askme())
json_url <- "<json type ESSENCE_url>"
api_data_json <- myProfile$get_api_data(json_url)

csv_url <- "<csv type ESSENCE_url>"
api_data_csv <- myProfile$get_api_data(csv_url, fromCSV = TRUE)
}

## ------------------------------------------------
## Method `Credentials$get_api_tsgraph`
## ------------------------------------------------

\dontrun{
myProfile <- Credentials$new(askme("Enter my username: "), askme())
url <- "<ESSENCE_url>"
api_data_tsgraph <- myProfile$get_api_tsgraph(url)
names(api_data_tsgraph)
img <- png::readPNG(api_data_tsgraph$tsgraph)
grid::grid.raster(img)
}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Credentials$new()}}
\item \href{#method-get_api_response}{\code{Credentials$get_api_response()}}
\item \href{#method-get_api_data}{\code{Credentials$get_api_data()}}
\item \href{#method-get_api_tsgraph}{\code{Credentials$get_api_tsgraph()}}
\item \href{#method-clone}{\code{Credentials$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initializes a new Credentials object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Credentials$new(username, password)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{username}}{a character of ESSENCE username}

\item{\code{password}}{a character of ESSENCE password}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `Credentials` object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_api_response"></a>}}
\if{latex}{\out{\hypertarget{method-get_api_response}{}}}
\subsection{Method \code{get_api_response()}}{
Get ESSENCE API response
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Credentials$get_api_response(url)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{url}}{a character of ESSENCE API URL}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An object of class response
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
myProfile <- Credentials$new(askme("Enter my username: "), askme())
url <- "<ESSENCE_url>"
api_response <- myProfile$get_api_response(url)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_api_data"></a>}}
\if{latex}{\out{\hypertarget{method-get_api_data}{}}}
\subsection{Method \code{get_api_data()}}{
Get ESSENCE API data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Credentials$get_api_data(url, fromCSV = FALSE, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{url}}{a character of ESSENCE API URL}

\item{\code{fromCSV}}{a logical, defines whether data are returned in .csv format or .json format}

\item{\code{...}}{Further arguments and CSV parsing parameters to be passed to \code{\link[readr]{read_csv}} when `fromCSV = TRUE`.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A dataframe (`fromCSV = TRUE`) or a list containing a dataframe and its metadata (`fromCSV = FALSE`)
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
myProfile <- Credentials$new(askme("Enter my username: "), askme())
json_url <- "<json type ESSENCE_url>"
api_data_json <- myProfile$get_api_data(json_url)

csv_url <- "<csv type ESSENCE_url>"
api_data_csv <- myProfile$get_api_data(csv_url, fromCSV = TRUE)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_api_tsgraph"></a>}}
\if{latex}{\out{\hypertarget{method-get_api_tsgraph}{}}}
\subsection{Method \code{get_api_tsgraph()}}{
Get ESSENCE API data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Credentials$get_api_tsgraph(url)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{url}}{a character of ESSENCE API URL}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list containing an api_response object and a path to a time series graph in .png format
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
myProfile <- Credentials$new(askme("Enter my username: "), askme())
url <- "<ESSENCE_url>"
api_data_tsgraph <- myProfile$get_api_tsgraph(url)
names(api_data_tsgraph)
img <- png::readPNG(api_data_tsgraph$tsgraph)
grid::grid.raster(img)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Credentials$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
